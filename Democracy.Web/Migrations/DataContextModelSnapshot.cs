// <auto-generated />
using System;
using Democracy.Web.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Democracy.Web.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Democracy.Web.Data.Entities.Candidate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CandidateId");

                    b.Property<string>("ImageUrl");

                    b.Property<string>("NameCandidate")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Proposal")
                        .IsRequired();

                    b.Property<int?>("VotingEventId");

                    b.HasKey("Id");

                    b.HasIndex("CandidateId");

                    b.HasIndex("VotingEventId");

                    b.ToTable("Candidates");
                });

            modelBuilder.Entity("Democracy.Web.Data.Entities.VotingEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<DateTime>("EndDate");

                    b.Property<string>("EventName");

                    b.Property<DateTime>("StartDate");

                    b.HasKey("Id");

                    b.ToTable("VotingEvents");
                });

            modelBuilder.Entity("Democracy.Web.Data.Entities.Candidate", b =>
                {
                    b.HasOne("Democracy.Web.Data.Entities.Candidate")
                        .WithMany("Candidates")
                        .HasForeignKey("CandidateId");

                    b.HasOne("Democracy.Web.Data.Entities.VotingEvent", "VotingEvent")
                        .WithMany()
                        .HasForeignKey("VotingEventId");
                });
#pragma warning restore 612, 618
        }
    }
}
